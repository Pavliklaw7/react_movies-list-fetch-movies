{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Loader/Loader.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","Loader","API_OMDB","FindMovie","addMovie","useState","foundMovie","setFoundMovie","errorMessage","setErrorMessage","movieTitle","setMovieTitle","isLoading","setIsLoading","requestMovie","a","fetch","response","json","result","Response","Error","Title","Plot","Poster","imdbID","formatMovie","message","htmlFor","type","id","placeholder","ClassNames","onChange","event","target","value","onClick","every","disabled","App","moviesFromServer","setMovies","length","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12d05640.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { Loader } from '../Loader';\n\nconst KEY = 'd575e7df';\nconst API_OMDB = `https://www.omdbapi.com/?i=tt3896198&apikey=${KEY}&`;\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [movieTitle, setMovieTitle] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const requestMovie = async(title) => {\n    try {\n      const response = await fetch(\n        `${API_OMDB}t=${title}`,\n      );\n      const result = await response.json();\n\n      if (result.Response === 'false') {\n        throw new Error('No movie found. Please choose another one!');\n      }\n\n      const formatMovie = movie => ({\n        title: movie.Title,\n        description: movie.Plot,\n        imgUrl: movie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n        imdbId: movie.imdbID,\n      });\n\n      setFoundMovie(formatMovie(result));\n      setIsLoading(false);\n    } catch (Error) {\n      setFoundMovie(null);\n      setErrorMessage(Error.message);\n      setIsLoading(false);\n    }\n  };\n\n  const handleInput = (event) => {\n    setErrorMessage('');\n    setMovieTitle(event.target.value);\n  };\n\n  const handleFindMovie = () => {\n    setFoundMovie(null);\n    setIsLoading(true);\n    requestMovie(movieTitle);\n  };\n\n  const handleSubmit = () => {\n    if (movies.every(movie => movie.imdbId !== foundMovie.imdbId)) {\n      addMovie(foundMovie);\n      setMovieTitle('');\n      setFoundMovie(null);\n    } else {\n      setErrorMessage(\n        'This movie is already in your list! Please choose another one.',\n      );\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={ClassNames('input', { 'is-danger': errorMessage })}\n              onChange={handleInput}\n              value={movieTitle}\n            />\n          </div>\n          {errorMessage && (\n            <p className=\"help is-danger\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleSubmit}\n              disabled={!foundMovie} // ?\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {isLoading ? <Loader /> : foundMovie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n    imdbId: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie) => {\n    setMovies(currentMovies => [...currentMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies.length ? <MoviesList movies={movies} />\n          : 'Add a movies'}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}